//
//  PreviewProvider.swift
//  Crypto
//
//  Created by Nayan on 24/05/25.
//

import Foundation
import SwiftUI

extension PreviewProvider {
    static var dev: DeveloperPreview {
        return DeveloperPreview.instance
    }
}

class DeveloperPreview {
    
    static let instance = DeveloperPreview()
    private init() {}
    
    let coin = CoinModel(
        id: "bitcoin",
        symbol: "btc",
        name: "Bitcoin",
        image: "https://coin-images.coingecko.com/coins/images/1/large/bitcoin.png?1696501400",
        currentPrice: 108891,
        marketCap: 2163205840903,
        marketCapRank: 1,
        fullyDilutedValuation: 2163207473990,
        totalVolume: 35270702243,
        high24H: 109840,
        low24H: 107156,
        priceChange24H: -909.465989680772,
        priceChangePercentage24H: -0.82829,
        marketCapChange24H: -18251222899.3408,
        marketCapChangePercentage24H: -0.83665,
        circulatingSupply: 19869178,
        totalSupply: 19869193,
        maxSupply: 21000000,
        ath: 111814,
        athChangePercentage: -2.65133,
        athDate: "2025-05-22T18:41:28.492Z",
        atl: 67.81,
        atlChangePercentage: 160423.8222,
        atlDate: "2013-07-06T00:00:00.000Z",
        lastUpdated: "2025-05-24T14:48:45.319Z",
        sparklineIn7D: SparklineIn7D(price: [
            103006.738928942, 102970.033278071, 102770.927652235, 103084.147795647, 103048.136393099, 102939.383216922, 103228.471656238, 103150.84851261, 103190.373578191, 103328.792498579, 103243.000070119, 103058.42662009, 103194.656506491, 103327.244817983, 103267.637503338, 103352.282577142, 103299.059147878, 103355.711350424, 103572.153611391, 103454.258403256, 103939.797158986, 103957.512383797, 103932.064345097, 103858.015251313, 103879.275064367, 103917.674814442, 104358.794742936, 105248.978753659, 105489.057213652, 105617.895821368, 105225.034358112, 104765.148216891, 103978.615668657, 104252.702728768, 104348.169454122, 105427.489048754, 106139.685508642, 105437.01050325, 105096.528451668, 104838.703718041, 103772.363723513, 103094.566911131, 102967.770438832, 102381.210482324, 103123.786845336, 103196.682230621, 103065.300564751, 103017.965544573, 102997.328040278, 102430.423779011, 103154.463174145, 104220.610212808, 104836.37399451, 105198.844277833, 105400.642248255, 104880.260825733, 105483.246851128, 105474.857796606, 105370.284303217, 105563.468767711, 105663.203549036, 105954.589371112, 106518.358867072, 106213.002435287, 105704.929602259, 106000.058376477, 106180.533859597, 105571.21456623, 105098.962227004, 105132.785398542, 105335.883585914, 105108.954545421, 105290.929497215, 104783.159911671, 104387.665091184, 104699.41947882, 105320.902829239, 105321.478536261, 106214.94694947, 105617.251440043, 106766.708275065, 106873.039845326, 106605.258806151, 106566.51014297, 106798.537515148, 106729.94892644, 106745.589021765, 106847.324087659, 106997.007004353, 107310.068079815, 107571.992455104, 107830.815159492, 106677.387879928, 106453.368735899, 106229.44845081, 106345.85396894, 106572.180745536, 106597.246633977, 107167.011550465, 108191.04574576, 108946.199459117, 109467.653931424, 106858.569460088, 107063.637451097, 108154.123824319, 108159.48051792, 108373.765350994, 108802.107685083, 109665.863716253, 109767.426773419, 109884.977692088, 110548.645818824, 111456.200606627, 111511.677455706, 111390.470249427, 110735.198706704, 110993.062312503, 110636.796482579, 110686.817393746, 110803.114111719, 110896.845017166, 111451.286218387, 111191.448702574, 110835.12962918, 111309.929103289, 111286.848904756, 111611.563438295, 111806.598245113, 111245.072841709, 111076.517992944, 110917.062999176, 111096.21954214, 111579.180641528, 111604.400100397, 111345.659090334, 111301.855327082, 111146.669774505, 110757.919504144, 110797.564362218, 110503.556284724, 110707.81903717, 110917.138572943, 111253.455228707, 111046.57686169, 109897.478270536, 108482.106011648, 109275.650448251, 109839.603838615, 109423.795529958, 109031.57767813, 109512.70343609, 108897.93222485, 108849.999376978, 108378.610295529, 108370.718550309, 107925.986637574, 107216.668568706, 107448.812369823, 107560.906235409, 107785.858623638, 108313.998189361, 108519.644198915, 108220.181253223, 107933.654125646, 107863.554381843, 108129.301862413, 108246.103799463, 109064.498755114
        ]),
        priceChangePercentage24HInCurrency: -0.828291430355998,
        currentHoldings: 1.5
    )
    
    let statWithPositivePercentageChange = StatisticModel(title: "Market Cap", value: "$27Bn", percentageChange: 25.34)
    
    let statWithNegativePercentageChange = StatisticModel(title: "Swing Volume", value: "$4Bn", percentageChange: -42.34)
    
    let statWithNoPercentageChange = StatisticModel(title: "Total Volume", value: "$27Bn")
    
    lazy var homeVM: HomeViewModel = {
        let vm = HomeViewModel()
        vm.statistics = [
            statWithNegativePercentageChange,
            statWithPositivePercentageChange,
            statWithNoPercentageChange,
            statWithNoPercentageChange,
            statWithNegativePercentageChange,
        ]
        return vm
    }()
}
